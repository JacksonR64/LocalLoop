name: 🔄 Rollback Deployment

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for rollback'
        required: true
        default: 'Emergency rollback requested'
      deployment_url:
        description: 'Deployment URL to rollback to (optional - leave empty to select interactively)'
        required: false
        default: ''

jobs:
  rollback:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: 🔧 Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: 🔍 List Recent Deployments
        run: |
          echo "🔍 Fetching recent deployments..."
          vercel ls --token ${{ secrets.VERCEL_TOKEN }} --yes
        
      - name: 🔄 Execute Rollback
        id: rollback
        run: |
          echo "🔄 Initiating rollback..."
          echo "📝 Reason: ${{ github.event.inputs.reason }}"
          echo ""
          
          if [ -n "${{ github.event.inputs.deployment_url }}" ]; then
            echo "🎯 Rolling back to specific deployment: ${{ github.event.inputs.deployment_url }}"
            vercel rollback ${{ github.event.inputs.deployment_url }} --token ${{ secrets.VERCEL_TOKEN }} --yes
          else
            echo "📋 Available deployments:"
            vercel ls --token ${{ secrets.VERCEL_TOKEN }} --yes
            echo ""
            echo "🔄 Rolling back to previous deployment..."
            # Get the previous production deployment and rollback to it
            PREV_DEPLOYMENT=$(vercel ls --token ${{ secrets.VERCEL_TOKEN }} --yes | grep "✅" | head -2 | tail -1 | awk '{print $2}')
            if [ -n "$PREV_DEPLOYMENT" ]; then
              echo "🎯 Rolling back to: $PREV_DEPLOYMENT"
              vercel rollback $PREV_DEPLOYMENT --token ${{ secrets.VERCEL_TOKEN }} --yes
            else
              echo "❌ Could not find previous deployment to rollback to"
              exit 1
            fi
          fi
          
      - name: ✅ Verify Rollback
        run: |
          echo "✅ Rollback completed!"
          echo "🔍 Current deployment status:"
          vercel ls --token ${{ secrets.VERCEL_TOKEN }} --yes | head -5
          
      - name: 📝 Summary
        run: |
          echo "## 🔄 Rollback Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Reason:** ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Time:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Status:** Rollback completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔍 **Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "- Verify the application is working correctly" >> $GITHUB_STEP_SUMMARY
          echo "- Check logs for any issues" >> $GITHUB_STEP_SUMMARY
          echo "- Investigate the root cause of the issue that required rollback" >> $GITHUB_STEP_SUMMARY 